/*
 * This source file was generated by the Gradle 'init' task
 */
package taller3;

public class App {

   public static void main(String[] args) {

      System.out.println(Escribir_asc(5, 3, 2));
      System.out.println(Obtener_cifras(10));
      System.out.println(Clasificar_char('a'));
      System.out.println(Hallar_division_exacta(10, 5));
      System.out.println(Consultar_hab((byte)1, "VE"));
      System.out.println(Obtener_obs(true, false, false));
      System.out.println(Conocer_invitacion("verde"));

   }

   /*
    * 1. Construya un algoritmo e implemente la función en Java Escribir_asc que
    * reciba tres números enteros diferentes
    * y devuelva en un String en orden ascendente con el siguiente formato:
    * "##### - ##### - #####", donde el primero es
    * el mayor de todos, el segundo el del medio, el tercero el menor de todos. Si
    * hay al menos dos números iguales,
    * devolverá el mensaje: "Error: La función no considera números iguales". Si
    * hay un error inesperado, deberá mostrar
    * el mensaje: "Ocurrió un error inesperado".
    */

   public static String Escribir_asc (int num1, int num2, int num3){
      try {
         if(num1==num2||num1==num3||num2==num3){
            return "Error: La función no considera números iguales";
         }   
         else 
            if(num1>num2 && num2>num3)
               return num1 + " - " + num2 + " - " + num3;
            else if(num1>num2 && num2<num3 && num1>num3)
               return num1 + " - " + num3 + " - " + num2;
            else if(num1<num2 && num2>num3 && num1<num3)
               return num2 + " - " + num3 + " - " + num1;
            else if(num1<num2 && num2>num3 && num1>num3)
               return num2 + " - " + num1 + " - " + num3;
            else if(num3>num1 && num3>num2 && num1>num2)
               return num3 + " - " + num1 + " - " + num2;
            else
               return num3 + " - " + num2 + " - " + num1;
      } 
      catch (Exception e) {
         return "Ocurrió un error inesperado";
      }
    }



   /*
    * 2. Construya un algoritmo e implemente la función en Java Obtener_cifras que
    * recibe un número entre 0 y 50.000
    * y devuelve byte con las cifras que tiene. Por ejemplo 10 tiene dos cifras,
    * 9999 tiene 4 cifras. Si el número
    * no está en el rango devuelve 0. Y si hay un error inesperado, devuelve -1.
    * 
    */

    public static byte Obtener_cifras (int num){
      try {
         if(num>=0 && num<=50000)
            if(num<10)
               return 1;
            else if(num>=10 && num<100)
               return 2;
            else if(num>=100 && num<1000)
               return 3;
            else
               return 4;
         else 
            return 0;
      } 
      catch (Exception e) {
         return -1;
      }
    }



   /*
    * 3. Construya un algoritmo e implemente la función en Java Clasificar_char que
    * recibe un caracter, y
    * devuelve un string de acuerdo con las siguientes condiciones: si es un
    * alfabético, deuvelve "ES LETRA";
    * si es numérico, devuelve "ES NUMERO" o si es un carácter especial, devuelve
    * "ESPECIAL".
    * Los caracteres se validan de acuerdo con la tabla ascii básica y lo explicado
    * en clase.
    * Si hay un error inesperado, deberá mostrar el mensaje:
    * "Ocurrió un error inesperado".
    * 
    */

   public static String Clasificar_char (char caracter){
      try {
         if((caracter>='a' && caracter<='z') || (caracter>='A' && caracter<='Z'))
            return "ES LETRA";
         else if(caracter>='0' && caracter<='9')
            return "ES NUMERO";
         else 
            return "ESPECIAL";
      } 
      catch (Exception e) {
         return "Ocurrió un error inesperado";
      }
    }




   /*
    * 
    * 4. Construya un algoritmo e implemente la función en Java
    * Hallar_division_exacta que pida dos números enteros,
    * calcule la división del primero sobre el segundo, y al final si la división
    * es exacta, devuelva "DIVISION EXACTA"
    * y de lo contrario devuelva "DIVISION NO EXACTA". (Exacta significa que tiene
    * cociente, pero no residuo).
    * 
    * Si alguno de los dos números que recibe es cero o negativo, devuelva
    * "NO SE ADMITE CERO O NEGATIVOS".
    * Si hay un error inesperado, deberá mostrar el mensaje:
    * "Ocurrió un error inesperado".
    * Nota: Revise el funcionamiento del operador mod que le puede ayudar.
    * 
    * 
    * 
    */

   public static String Hallar_division_exacta (int num1, int num2){
      try {
         if(num1<=0 || num2<=0)
            return "NO SE ADMITE CERO O NEGATIVOS";
         else
            if(num1 % num2 == 0)
               return "DIVISION EXACTA";
            else
               return "DIVISION NO EXACTA";
      } 
      catch (Exception e) {
         return "Ocurrió un error inesperado";
      }
    }


   

   /*
    * 5. En la siguiente tabla se encuentra la información de las habitaciones de
    * una finca hotel:
    * 
    * Habitación Camas Planta    AA/VENTILADOR
    *    101         2     Primera     AA
    *    102         1     Primera     VE
    *    201         3     Segunda     AA
    *    202         2     Segunda     VE
    *    301         2     Tercera     AA
    * 
    * 
    * Construya un algoritmo e implemente la función en Java Consultar_hab que
    * reciba en un byte el número de camas
    * y en un string si desea VE o AA, y deuvelva en un texto el o los números de
    * habitación que cumplen ese requisito.
    * Si son varias habitaciones, devuelvalas separadas por el caracter |
    * (normalmente, al lado izquierdo de la tecla del 1).
    * Ejemplo: "101|301"
    * Si el número de camas no está entre 1 y 3 o el string es diferente a AA o VE,
    * devuelva "DATOS NO VÁLIDOS".
    * Si hay un error inesperado, deberá mostrar el mensaje:
    * "Ocurrió un error inesperado".
    */

   public static String Consultar_hab (byte num_camas, String VE_AA){
      try {
         //final int hab1=101, hab2=102, hab3=201, hab4=202, hab5=301;
         final String VE = "VE";
         final String AA = "AA";
         if((num_camas>=1 && num_camas<=3) || (VE_AA==VE && VE_AA==AA)){
            if(num_camas==1 && VE_AA==VE)
               return "102";
            else if(num_camas==2 && VE_AA==VE)
               return "202";
            else if(num_camas==2 && VE_AA==AA)
               return "101|301";
            else if(num_camas==3 && VE_AA==AA)
               return "201";
            else  
               return "No hay habitaciones";
         }      
         else{
            return "Datos no válidos";
         }
      }  
      catch (Exception e) {
         return "Ocurrió un error inesperado";
      }
    }


   
   /*
    * 
    * 6. Un restaurante vende 3 platos. Si el cliente solicita el plato 1, le dan
    * el postre gratis; si selecciona los platos
    * 1 y 2, le dan la bebida gratis y si selecciona los platos 1,2 y 3, le dan
    * postre y bebida.
    * Construya un algoritmo e implemente la función Obtener_obs en Java que reciba
    * 3 booleanos, uno para cada plato y en
    * un String devuelva el obsequio ganado en mayúscula, así: "BEBIDA", "POSTRE",
    * "BEBIDA Y POSTRE".
    * Si los 3 platos vienen en false, , devuelva "PLATOS NO VÁLIDOS".
    * Si hay un error inesperado, deberá mostrar el mensaje:
    * "Ocurrió un error inesperado".
    */

   public static String Obtener_obs (boolean plato1, boolean plato2, boolean plato3){
      try {
         if(plato1==true && plato2==false && plato3==false)
            return "POSTRE";
         else if(plato1==true && plato2==true && plato3==false)
            return "BEBIDA";
         else if(plato1==true && plato2==true && plato3==true)
            return "BEBIDA Y POSTRE";
         else 
            return "PLATOS NO VÁLIDOS";
      } 
      catch (Exception e) {
         return "Ocurrió un error inesperado";
      }
    }







   /*
    * 7. Un grupo de amigos hace un sorteo semanalmente con pelotas de ping pong,
    * para saber quién invita y a qué  la próxima salida.
    * Las opciones dependen del color que sacan en cada bola y son:
    * 
    * verde: Invita a las cervezas
    * azul: Invita a la pizza
    * rojo: Invita al postre
    * amarillo: Paga el parqueadero de todos
    * blanco o negro: Vaya y disfrute
    * Si la función recibe algo diferente a los colores dados, debe retornar
    * "Error en el color".
    * 
    * Se necesita una función en java Conocer_invitacion que reciba un string con
    * el color de la bola y retorna un
    * String con exactamente el texto de la invitación correspondiente.
    * 
    * Si hay un error inesperado, deberá mostrar el mensaje:
    * "Ocurrió un error inesperado".
    * 
    */

   public static String Conocer_invitacion (String color_bola){
      try {
         final String verde = "verde";
         final String azul = "azul";
         final String rojo = "rojo";
         final String amarillo = "amarillo";
         final String blanco = "blanco";
         final String negro = "negro";
         if(color_bola == verde)
            return "Invita a las cervezas";
         else if(color_bola == azul)
            return "Invita a la pizza";
         else if(color_bola == rojo)
            return "Invita al postre";
         else if(color_bola == amarillo)
            return "Paga el parqueadero de todos";
         else if(color_bola == blanco || color_bola == negro)
            return "Vaya y disfrute";
         else 
            return "Error en el color";
      } 
      catch (Exception e) {
         return "Ocurrió un error inesperado";
      }
    }

